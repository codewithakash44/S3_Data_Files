// Script to move files from qa to master branch with the help of cherry-pick
--------------------------------------------------------------------------------------------------------------
v1.1 -- Initial Script
v1.2 -- Few Bug and hot fixes for improvement
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

pipeline {
    agent any
 
    parameters {
        string(name: 'COMMIT_ID', defaultValue: '', description: 'The commit ID to cherry-pick')
    }
 
    environment {
        QA_BRANCH = 'qa'
        MASTER_BRANCH = 'master'
        REPO_URL = 'git@github.com:codewithakash44/S3_Data_Files.git'
        CREDENTIALS_ID = '3a61d558-6c08-4ec6-bd64-048c1bead169'
    }
 
    stages {
        stage('Checkout') {
            steps {
                git credentialsId: "${env.CREDENTIALS_ID}", url: "${env.REPO_URL}"
                script {
                    // Ensure the QA branch is up-to-date
                    sh """
                    git fetch origin
                    git checkout ${env.QA_BRANCH}
                    git pull origin ${env.QA_BRANCH}
                    """
                }
            }
        }
 
        stage('Cherry-pick Commit') {
            steps {
                script {
                    try {
                        echo "Cherry-picking commit ${params.COMMIT_ID}..."
                        sh "git cherry-pick ${params.COMMIT_ID}"
                    } catch (Exception e) {
                        echo "Cherry-pick failed. Aborting..."
                        sh "git cherry-pick --abort"
                        error "Cherry-pick conflict. Manual resolution required."
                    }
                }
            }
        }
 
        stage('Push to Master') {
            steps {
                script {
                    sh """
                    git checkout ${env.MASTER_BRANCH}
                    git pull origin ${env.MASTER_BRANCH}
                    git cherry-pick ${params.COMMIT_ID}
                    git push origin ${env.MASTER_BRANCH}
                    """
                    echo "Changes pushed to master branch."
                }
            }
        }
    }
 
    post {
        success {
            echo 'Cherry-pick and push to master branch succeeded.'
        }
        failure {
            echo 'The process failed. Please check the logs for details.'
        }
    }
}
